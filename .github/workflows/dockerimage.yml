name: Build

on: 
  push:
    branches:
      - "*"
    tags:
      - "v*"

env:
  DOCKER_BUILDX_PLATFORM: linux/amd64,linux/arm/v7,linux/arm64

jobs:

  build:
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@master

    - name: Add GITHUB Environment Variables
      run: |
        echo "GITHUB_REF_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        if [[ "${GITHUB_REF}" = refs/heads/* ]]
        then 
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        elif [[ "${GITHUB_REF}" = refs/tags/* ]]
        then 
          echo "GITHUB_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        fi
    
    - name: lint dockerfile
      run: docker run --rm -v "$PWD/Dockerfile:/Dockerfile:ro" redcoolbeans/dockerlint
    
    - name: install docker buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
        qemu-version: latest
    
    - name: build docker images
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        docker buildx create --name builder --use
        docker buildx inspect --bootstrap
        docker buildx build . \
          --platform "${{ env.DOCKER_BUILDX_PLATFORM }}"
    
    - name: login to docker hub
      if: ${{ env.GITHUB_BRANCH == 'master' || startsWith(env.GITHUB_TAG, 'v')  }}
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" |
          docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
    - name: push docker images
      if: ${{ env.GITHUB_BRANCH == 'master' || startsWith(env.GITHUB_TAG, 'v')  }}
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        DOCKER_REPOSITORY="$GITHUB_REPOSITORY"
        DOCKER_TAGS=()
        
        if [ "${GITHUB_BRANCH}" ]
        then 
          DOCKER_TAGS=(${GITHUB_BRANCH/\//-})
        elif [[ "$GITHUB_TAG" = v* ]]
        then 
          VERSION=${GITHUB_TAG#v}
          VERSION_PARTS=($(echo $VERSION | tr "." "\n"))
          DOCKER_TAGS=(latest $VERSION ${VERSION_PARTS[0]})
        fi
        
        echo "image tag(s):"
        printf "  ${DOCKER_REPOSITORY}:%s\n" "${DOCKER_TAGS[@]}"
        docker buildx build --push . \
          --platform "${{ env.DOCKER_BUILDX_PLATFORM }}" \
          ${DOCKER_TAGS[@]/#/--tag ${DOCKER_REPOSITORY}:}
